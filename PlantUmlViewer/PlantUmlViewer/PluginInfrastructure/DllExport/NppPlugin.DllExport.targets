<Project
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="NppPlugin.DllExport.MSBuild.DllExportTask"
             AssemblyFile="NppPlugin.DllExport.MSBuild.dll"/>
  <Target Name="AfterBuild"
          DependsOnTargets="GetFrameworkPaths"
          >
    <PropertyGroup>
		<!-- LibToolPath is optional - it's needed to debug C++, but you can still debug the C# code without it
			If you don't have the C++ toolchain installed this is missing, but then you can't' debug C++ anyway -->
        <LibToolPath Condition="Exists('$(DevEnvDir)\..\..\VC\bin')">$(DevEnvDir)\..\..\VC\bin</LibToolPath>
    </PropertyGroup>

    <!-- 
        Due to an assembly bug / change for SDK tools included with Visual Studio >= 2019 it is not possible to export merged assemblies in some cases.
        Errors like 'error : syntax error at token '-' in:     IL_0210:  ldc.r4     -nan(ind)' are occuring.
        Further reading:
            - https://stackoverflow.com/questions/66282361/ilasm-problem-when-dealing-with-double-nan-and-inf
            - https://gitlab.com/OpenTAP/opentap/-/issues/344
            - http://unicode.org/L2/L2002/02039-J1N6646-cli-5.pdf
        Fix: Either use Visual Studio 2017 to build the project or set a specific path for the corresponding tools: .NET Framework Developer pack 4.6.1 or 4.6.2
    -->
    <PropertyGroup>
      <SpecificSDK40ToolsPath Condition="Exists('$(SDK40ToolsPath)..\NETFX 4.6.1 Tools')">$(SDK40ToolsPath)..\NETFX 4.6.1 Tools</SpecificSDK40ToolsPath>
      <SpecificSDK40ToolsPath Condition="Exists('$(SDK40ToolsPath)..\NETFX 4.6.2 Tools')">$(SDK40ToolsPath)..\NETFX 4.6.2 Tools</SpecificSDK40ToolsPath>
    </PropertyGroup>
    <Error Condition="!Exists('$(SpecificSDK40ToolsPath)')" Text="Specific required SDK40ToolsPath not available"/>
    <Message Text="Using specific SDK40ToolsPath: $(SpecificSDK40ToolsPath)" Importance="high"/>

    <DllExportTask Platform="$(Platform)"
                   PlatformTarget="$(PlatformTarget)"
                   CpuType="$(CpuType)"
                   EmitDebugSymbols="$(DebugSymbols)"
                   DllExportAttributeAssemblyName="$(DllExportAttributeAssemblyName)"
                   DllExportAttributeFullName="$(DllExportAttributeFullName)"
                   Timeout="$(DllExportTimeout)"
                   KeyContainer="$(KeyContainerName)$(AssemblyKeyContainerName)"
                   KeyFile="$(KeyOriginatorFile)"
                   ProjectDirectory="$(MSBuildProjectDirectory)"
                   InputFileName="$(TargetPath)"
                   FrameworkPath="$(TargetedFrameworkDir);$(TargetFrameworkDirectory)"
                   LibToolPath="$(LibToolPath)"
                   LibToolDllPath="$(DevEnvDir)"
                   SdkPath="$(SDK40ToolsPath)"/>
 
	<!-- $(MSBuildProgramFiles32) points to the 32 bit program files dir.
		On 32 bit windows usually C:\Program Files\
		On 64 bit windows usually C:\Program Files (x86)\
		$(ProgramW6432) points to the 64bit Program Files (on 32 bit windows it is blank) -->
    <MakeDir Directories="$(MSBuildProgramFiles32)\Notepad++\plugins\$(TargetName)\" Condition="Exists('$(MSBuildProgramFiles32)\Notepad++\plugins\') AND !Exists('$(MSBuildProgramFiles32)\Notepad++\plugins\$(TargetName)\') AND '$(Platform)'=='x86'" />
    <Copy 
        SourceFiles="$(TargetPath)" 
        DestinationFolder="$(MSBuildProgramFiles32)\Notepad++\plugins\$(TargetName)\" 
        Condition="Exists('$(MSBuildProgramFiles32)\Notepad++\plugins\$(TargetName)\') AND '$(Platform)'=='x86'"
        ContinueOnError="false" />
    <MakeDir Directories="$(ProgramW6432)\Notepad++\plugins\$(TargetName)\" Condition="Exists('$(ProgramW6432)\Notepad++\plugins\') AND !Exists('$(ProgramW6432)\Notepad++\plugins\$(TargetName)\') AND '$(Platform)'=='x64'" />
    <Copy 
        SourceFiles="$(TargetPath)" 
        DestinationFolder="$(ProgramW6432)\Notepad++\plugins\$(TargetName)\" 
        Condition="Exists('$(ProgramW6432)\Notepad++\plugins\$(TargetName)\') AND '$(Platform)'=='x64'"
        ContinueOnError="false" />
  </Target>
</Project>
